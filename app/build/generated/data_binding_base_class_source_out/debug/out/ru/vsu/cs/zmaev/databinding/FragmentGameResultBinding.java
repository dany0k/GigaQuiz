// Generated by data binding compiler. Do not edit!
package ru.vsu.cs.zmaev.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import ru.vsu.cs.zmaev.GameResultFragment;
import ru.vsu.cs.zmaev.R;

public abstract class FragmentGameResultBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout gameWonConstraintLayout;

  @NonNull
  public final Button nextMatchButton;

  @NonNull
  public final TextView textView;

  @NonNull
  public final ImageView youWinImage;

  @Bindable
  protected GameResultFragment mViewModel;

  protected FragmentGameResultBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout gameWonConstraintLayout, Button nextMatchButton, TextView textView,
      ImageView youWinImage) {
    super(_bindingComponent, _root, _localFieldCount);
    this.gameWonConstraintLayout = gameWonConstraintLayout;
    this.nextMatchButton = nextMatchButton;
    this.textView = textView;
    this.youWinImage = youWinImage;
  }

  public abstract void setViewModel(@Nullable GameResultFragment viewModel);

  @Nullable
  public GameResultFragment getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentGameResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_game_result, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentGameResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentGameResultBinding>inflateInternal(inflater, R.layout.fragment_game_result, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentGameResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_game_result, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentGameResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentGameResultBinding>inflateInternal(inflater, R.layout.fragment_game_result, null, false, component);
  }

  public static FragmentGameResultBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentGameResultBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentGameResultBinding)bind(component, view, R.layout.fragment_game_result);
  }
}
